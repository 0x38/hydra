(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{66:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return l}),t.d(n,"rightToc",function(){return i}),t.d(n,"default",function(){return p});t(0);var r=t(70);function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l={id:"logging",title:"Customizing logging",sidebar_label:"Customizing logging"},i=[],c={rightToc:i},u="wrapper";function p(e){var n=e.components,t=a(e,["components"]);return Object(r.b)(u,o({},c,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Hydra is configuring Python standard logging library with the dictConfig method. You can learn more about it ",Object(r.b)("a",o({parentName:"p"},{href:"https://docs.python.org/3/howto/logging.html"}),"here"),"."),Object(r.b)("p",null,"This example demonstrates how to to customize the logging behavior of your Hydra app.\nThe modified logging configuration differs from the default in the following:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It outputs to stdout and not to a log file as well"),Object(r.b)("li",{parentName:"ul"},"It uses a simpler log pattern, without the timestamp etc.")),Object(r.b)("p",null,"Note that the resulting config will be a combination of the default logging config and your specification,\nWith your specification overriding the default."),Object(r.b)("p",null,".hydra/hydra.yaml"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-yaml"}),"defaults:\n  - logging\n")),Object(r.b)("p",null,".hydra/logging.yaml"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-yaml"}),"hydra:\n  # python logging configuration\n  logging:\n    formatters:\n      simple:\n        format: '[%(levelname)s] - %(message)s'\n    root:\n      handlers: [console]\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-bash"}),"$ python example.py\n[INFO] - Info level message\n")),Object(r.b)("p",null,"Check the ",Object(r.b)("a",o({parentName:"p"},{href:"https://github.com/facebookresearch/hydra/tree/master/demos/99_hydra_configuration/logging"}),"runnable example"),"."))}p.isMDXComponent=!0},70:function(e,n,t){"use strict";t.d(n,"a",function(){return i}),t.d(n,"b",function(){return g});var r=t(0),o=t.n(r),a=o.a.createContext({}),l=function(e){var n=o.a.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},i=function(e){var n=l(e.components);return o.a.createElement(a.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){return o.a.createElement(o.a.Fragment,{},e.children)}},p=function(e){var n=e.components,t=e.mdxType,r=e.originalType,a=e.parentName,i=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===n.indexOf(r)&&(t[r]=e[r]);return t}(e,["components","mdxType","originalType","parentName"]),c=l(n);return o.a.createElement(c[a+"."+t]||c[t]||u[t]||r,n?Object.assign({},i,{components:n}):i)};function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=p;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[c]="string"==typeof e?e:r,l[1]=i;for(var g=2;g<a;g++)l[g]=t[g];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);