(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{169:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return f}));var o=t(1),i=t(9),a=(t(0),t(227)),r={id:"nesting",title:"Nesting configs"},c={id:"tutorials/structured_config/nesting",title:"Nesting configs",description:"Configs can be nested using several different methods.",source:"@site/docs/tutorials/structured_config/2_nesting_configs.md",permalink:"/docs/next/tutorials/structured_config/nesting",editUrl:"https://github.com/facebookresearch/hydra/edit/master/website/docs/tutorials/structured_config/2_nesting_configs.md",version:"next",lastUpdatedBy:"Omry Yadan",lastUpdatedAt:1588553703,sidebar:"Docs",previous:{title:"Minimal example",permalink:"/docs/next/tutorials/structured_config/minimal_example"},next:{title:"Config groups",permalink:"/docs/next/tutorials/structured_config/config_groups"}},s=[{value:"Nesting using a dataclass definition",id:"nesting-using-a-dataclass-definition",children:[]},{value:"Nesting by specifying a node path",id:"nesting-by-specifying-a-node-path",children:[]},{value:"Nesting by creating an ad-hoc config node",id:"nesting-by-creating-an-ad-hoc-config-node",children:[]}],l={rightToc:s};function f(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Configs can be nested using several different methods."),Object(a.b)("h3",{id:"nesting-using-a-dataclass-definition"},"Nesting using a dataclass definition"),Object(a.b)("p",null,"This is the preferred approach, use it when possible.\nThere two things of note in this example:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A top level ",Object(a.b)("inlineCode",{parentName:"li"},"MyConfig")," class is defined and stored in the ",Object(a.b)("inlineCode",{parentName:"li"},"ConfigStore")),Object(a.b)("li",{parentName:"ul"},"The ",Object(a.b)("inlineCode",{parentName:"li"},"cfg")," object in ",Object(a.b)("inlineCode",{parentName:"li"},"my_app")," is annotated as the top level ",Object(a.b)("inlineCode",{parentName:"li"},"MyConfig")," class, providing static type safety for\nthe entire configuration tree\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-python"}),'@dataclass\nclass MySQLConfig:\n    host: str = "localhost"\n    port: int = 3306\n\n@dataclass\nclass MyConfig:\n    db: MySQLConfig = MySQLConfig()\n    verbose: bool = True\n\ncs = ConfigStore.instance()\ncs.store(name="config", node=MyConfig)\n\n@hydra.main(config_name="config")\ndef my_app(cfg: MyConfig) -> None:\n    # Python knows that the type of cfg.db is MySQLConfig without any additional hints\n    print(f"Host: {cfg.db.host}, port: {cfg.db.port}")\n\nif __name__ == "__main__":\n    my_app()\n')),Object(a.b)("h3",{id:"nesting-by-specifying-a-node-path"},"Nesting by specifying a node path"),Object(a.b)("p",null,"If for some reason you do not want to have a top level config class, you can still place MySQLConfig\nin a specific path in the final configuration object. To do that, use the ",Object(a.b)("inlineCode",{parentName:"p"},"path")," parameter to specify the path.\nYou can use dot-notation to create multiple parent nodes as needed (E.G. ",Object(a.b)("inlineCode",{parentName:"p"},'path="foo.bar.baz"'),")  "),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-python"}),'@dataclass\nclass MySQLConfig:\n    ...\n\ncfg_store = ConfigStore.instance()\ncfg_store.store(name="config", path="db", node=MySQLConfig)\n\n@hydra.main(config_name="config")\ndef my_app(cfg: DictConfig) -> None:\n    # mypy does not know the type of cfg.db.\n    # You can optionally help it with a hint to get static type checking.\n    db: MySQLConfig = cfg.db\n    print(f"Host: {db.host}, port: {db.port}")\n')),Object(a.b)("h3",{id:"nesting-by-creating-an-ad-hoc-config-node"},"Nesting by creating an ad-hoc config node"),Object(a.b)("p",null,"Another choice, which offers even more flexibility is to create an ad-hoc config node and store it.\nThis allow you to control the shape of the config node, enabling things like having multiple config nodes in the config\nobject you are storing. This method should be used as a last resort as it offers the least static type safety."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-python"}),'cfg_store.store(\n    name="config",\n    node={\n        "src": MySQLConfig(host="localhost"),\n        "dst": MySQLConfig(host="example.com"),\n    },\n)\n\n\n@hydra.main(config_name="config")\ndef my_app(cfg: DictConfig) -> None:\n    src: MySQLConfig = cfg.src\n    dst: MySQLConfig = cfg.dst\n    print(f"Copying {src.host}:{src.port} to {dst.host}:{dst.port}")\n')))}f.isMDXComponent=!0},227:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return u}));var o=t(0),i=t.n(o);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),f=function(e){var n=i.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},p=function(e){var n=f(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},g=Object(o.forwardRef)((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,r=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=f(t),g=o,u=p["".concat(r,".").concat(g)]||p[g]||d[g]||a;return t?i.a.createElement(u,c({ref:n},l,{components:t})):i.a.createElement(u,c({ref:n},l))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,r=new Array(a);r[0]=g;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,r[1]=c;for(var l=2;l<a;l++)r[l]=t[l];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,t)}g.displayName="MDXCreateElement"}}]);