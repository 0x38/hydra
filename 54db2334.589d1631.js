(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{166:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return o})),n.d(a,"metadata",(function(){return c})),n.d(a,"rightToc",(function(){return l})),n.d(a,"default",(function(){return d}));var t=n(1),r=n(9),i=(n(0),n(229)),o={id:"package_header",title:"The package header"},c={id:"advanced/package_header",title:"The package header",description:"## Overview",source:"@site/docs/advanced/package_header.md",permalink:"/docs/next/advanced/package_header",editUrl:"https://github.com/facebookresearch/hydra/edit/master/website/docs/advanced/package_header.md",version:"next",lastUpdatedBy:"Omry Yadan",lastUpdatedAt:1589788783,sidebar:"Docs",previous:{title:"Nevergrad Sweeper plugin",permalink:"/docs/next/plugins/nevergrad_sweeper"},next:{title:"Config search path",permalink:"/docs/next/advanced/search_path"}},l=[{value:"Overview",id:"overview",children:[]},{value:"Keywords",id:"keywords",children:[]},{value:"Overriding",id:"overriding",children:[{value:"Examples structure",id:"examples-structure",children:[]},{value:"Overriding via command line",id:"overriding-via-command-line",children:[]},{value:"Overriding via defaults list",id:"overriding-via-defaults-list",children:[]},{value:"Overriding via the command line, again",id:"overriding-via-the-command-line-again",children:[]},{value:"The evolution of the <code>@package</code> header",id:"the-evolution-of-the-package-header",children:[]},{value:"The config header format",id:"the-config-header-format",children:[]}]}],p={rightToc:l};function d(e){var a=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},p,n,{components:a,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"overview"},"Overview"),Object(i.b)("p",null,"Each config file contains an optional header section at the top.\nCurrently the only supported directive in the header is ",Object(i.b)("inlineCode",{parentName:"p"},"@package"),".\nA ",Object(i.b)("inlineCode",{parentName:"p"},"package")," is the ",Object(i.b)("inlineCode",{parentName:"p"},"path")," of a node in the config.\nFor example, the ",Object(i.b)("inlineCode",{parentName:"p"},"package")," of the node ",Object(i.b)("inlineCode",{parentName:"p"},"{driver: mysql}")," below is ",Object(i.b)("inlineCode",{parentName:"p"},"db"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml"}),"db:\n  driver: mysql\n")),Object(i.b)("p",null,"By adding the ",Object(i.b)("inlineCode",{parentName:"p"},"@package")," directive to the header of your config, you can control the package for that config:\nThe following is equivalent to the previous example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml"}),"# @package: db\ndriver: mysql\n")),Object(i.b)("h2",{id:"keywords"},"Keywords"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"package")," directive supports the following keywords:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"_global_")," : The top level package (equivalent to the empty string). This is the default in Hydra 1.0 and older."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"_group_")," : The config group of the file, for example, the ",Object(i.b)("inlineCode",{parentName:"p"},"_group_")," for the config file ",Object(i.b)("inlineCode",{parentName:"p"},"foo/bar/zoo.yaml")," is ",Object(i.b)("inlineCode",{parentName:"p"},"foo.bar"),"."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"_name_")," : The config name, for example - the ",Object(i.b)("inlineCode",{parentName:"p"},"_name_")," for the config file ",Object(i.b)("inlineCode",{parentName:"p"},"foo/bar/zoo.yaml")," is",Object(i.b)("inlineCode",{parentName:"p"},"zoo")),Object(i.b)("p",null,"You can use both ",Object(i.b)("inlineCode",{parentName:"p"},"_group_")," and ",Object(i.b)("inlineCode",{parentName:"p"},"_name_")," as a part of the package specification, for example, for the config file ",Object(i.b)("inlineCode",{parentName:"p"},"foo/bar/zoo.yaml"),",\nthe package ",Object(i.b)("inlineCode",{parentName:"p"},"oompa._group_._name_")," would equal ",Object(i.b)("inlineCode",{parentName:"p"},"oompa.foo.bar.zoo"),"."),Object(i.b)("p",null,"For primary config files mentioned in ",Object(i.b)("inlineCode",{parentName:"p"},"@hydra.main"),", the default package is ",Object(i.b)("inlineCode",{parentName:"p"},"_global_"),".\nFor config files in config groups, the recommended choice for the ",Object(i.b)("inlineCode",{parentName:"p"},"@package")," directive is ",Object(i.b)("inlineCode",{parentName:"p"},"_group_"),", and it will become the default in Hydra 1.1. "),Object(i.b)("h2",{id:"overriding"},"Overriding"),Object(i.b)("p",null,"You can override the ",Object(i.b)("inlineCode",{parentName:"p"},"@package")," directive via the command line or via the defaults list.\nSource code for these examples is available ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/facebookresearch/hydra/tree/master/examples/advances/package_overrides"}),"here"),"."),Object(i.b)("h3",{id:"examples-structure"},"Examples structure"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{}),"$ tree\n\u251c\u2500\u2500 conf\n\u2502\xa0\xa0 \u251c\u2500\u2500 db\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 mysql.yaml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 postgresql.yaml\n\u2502\xa0\xa0 \u251c\u2500\u2500 simple.yaml\n\u2502\xa0\xa0 \u2514\u2500\u2500 two_packages.yaml\n\u251c\u2500\u2500 simple.py\n\u2514\u2500\u2500 two_packages.py\n")),Object(i.b)("p",null,"Given the configs and application below"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="conf/simple.yaml"',title:'"conf/simple.yaml"'}),"defaults:\n  - db: mysql\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="conf/db/mysql.yaml"',title:'"conf/db/mysql.yaml"'}),"# @package: _group_\ndriver: mysql\nuser: omry\npass: secret\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-python",metastring:'title="simple.py"',title:'"simple.py"'}),'@hydra.main(config_path="conf", config_name="simple")\ndef my_app(cfg: DictConfig) -> None:\n    print(cfg.pretty())\n')),Object(i.b)("p",null,"Running the app results in this output."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml"}),"$ python simple.py \ndb:\n  driver: mysql\n  user: omry\n  pass: secret\n")),Object(i.b)("h3",{id:"overriding-via-command-line"},"Overriding via command line"),Object(i.b)("p",null,"You can override the package of ",Object(i.b)("inlineCode",{parentName:"p"},"db/mysql.yaml")," from the command line"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{}),"$ python my_app.py db@source=mysql \nsource:\n  driver: mysql\n  user: omry\n  pass: secret\n")),Object(i.b)("h3",{id:"overriding-via-defaults-list"},"Overriding via defaults list"),Object(i.b)("p",null,"You can also override package via the defaults list.\nWe are making it more interesting below by adding a second item to the defaults, with a different package "),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="two_packages.yaml"',title:'"two_packages.yaml"'}),"defaults:\n  - db@source: mysql\n  - db@destination: mysql\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-python",metastring:'title="two_packages.py"',title:'"two_packages.py"'}),'@hydra.main(config_path="conf", config_name="two_packages")\ndef my_app(cfg: DictConfig) -> None:\n    print(cfg.pretty())\n')),Object(i.b)("p",null,"Output:"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml"}),"$ python two_packages.py \nsource:\n  driver: mysql\n  user: omry\n  pass: secret\ndestination:\n  driver: mysql\n  user: omry\n  pass: secret\n")),Object(i.b)("h3",{id:"overriding-via-the-command-line-again"},"Overriding via the command line, again"),Object(i.b)("p",null,"In the above example, db appears twice in the defaults with different package overrides.\nIf you wanted to override one of them to a different package, you need to specify exactly which one, and what is the new package."),Object(i.b)("p",null,"You can do this with the syntax ",Object(i.b)("inlineCode",{parentName:"p"},"GROUP_NAME@SOURCE_PACKAGE@DESTINATION_PACKAGE=OPTION"),", for example,\nto rename db@destination to db@backup, use:"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml"}),"$ python two_packages.py db@destination:backup=mysql\nsource:\n  driver: mysql\n  user: omry\n  pass: secret\nbackup:\n  driver: mysql\n  user: omry\n  pass: secret\n")),Object(i.b)("h3",{id:"the-evolution-of-the-package-header"},"The evolution of the ",Object(i.b)("inlineCode",{parentName:"h3"},"@package")," header"),Object(i.b)("p",null,"The behavior of the ",Object(i.b)("inlineCode",{parentName:"p"},"@package")," is changing:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Before Hydra 1.0, the ",Object(i.b)("inlineCode",{parentName:"li"},"@package")," header was not supported, and the default behavior was equivalent to ",Object(i.b)("inlineCode",{parentName:"li"},"@package _global_"),". "),Object(i.b)("li",{parentName:"ul"},"Hydra 1.0 introduces the ",Object(i.b)("inlineCode",{parentName:"li"},"@package")," header and make ",Object(i.b)("inlineCode",{parentName:"li"},"_group_")," the recommended choice, but does not change the default behavior.\nIf you omit the ",Object(i.b)("inlineCode",{parentName:"li"},"@package")," header you will receive a warning telling you to add a ",Object(i.b)("inlineCode",{parentName:"li"},"@package")," header, recommending ",Object(i.b)("inlineCode",{parentName:"li"},"_group_"),"."),Object(i.b)("li",{parentName:"ul"},"Hydra 1.1 will change the default to ",Object(i.b)("inlineCode",{parentName:"li"},"_group_"),".")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"@package")," header is described in more detail in ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://docs.google.com/document/d/10aU2axeJj_p_iv1Hp9VulYLL5qyvhErg89MKFGbkZO4/edit?usp=sharing"}),"this design doc"),"."),Object(i.b)("h3",{id:"the-config-header-format"},"The config header format"),Object(i.b)("p",null,"The config header format is a generic dictionary style block at the top of your config files."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml"}),"# @oompa a.b.c\n# @loompa: yup\nx: 10\n")),Object(i.b)("p",null,"The resulting header is "),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-python"}),'{"oompa": "a.b.c", "loompa": "yup"}\n')),Object(i.b)("p",null,"Both colon and whitespace are accepted as a separator between the key and the value.\nUnrecognized header keys (like ",Object(i.b)("inlineCode",{parentName:"p"},"oompa")," and ",Object(i.b)("inlineCode",{parentName:"p"},"loompa"),") are ignored."))}d.isMDXComponent=!0},229:function(e,a,n){"use strict";n.d(a,"a",(function(){return b})),n.d(a,"b",(function(){return u}));var t=n(0),r=n.n(t);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),d=function(e){var a=r.a.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):c({},a,{},e)),n},b=function(e){var a=d(e.components);return r.a.createElement(p.Provider,{value:a},e.children)},s={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},m=Object(t.forwardRef)((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=d(n),m=t,u=b["".concat(o,".").concat(m)]||b[m]||s[m]||i;return n?r.a.createElement(u,c({ref:a},p,{components:n})):r.a.createElement(u,c({ref:a},p))}));function u(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in a)hasOwnProperty.call(a,l)&&(c[l]=a[l]);c.originalType=e,c.mdxType="string"==typeof e?e:t,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);