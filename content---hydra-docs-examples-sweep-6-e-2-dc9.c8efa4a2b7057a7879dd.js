(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{62:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",function(){return i}),n.d(t,"rightToc",function(){return p}),n.d(t,"default",function(){return c});n(0);var r=n(70);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i={id:"sweep",title:"Sweep example",sidebar_label:"Sweep example"},p=[],u={rightToc:p},s="wrapper";function c(e){var t=e.components,n=o(e,["components"]);return Object(r.b)(s,a({},u,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Hydra supports running jobs on Slurm and Chronos using ",Object(r.b)("a",a({parentName:"p"},{href:"https://github.com/facebookresearch/fairtask"}),"fairtask"),"\nand ",Object(r.b)("a",a({parentName:"p"},{href:"https://github.com/facebookresearch/submitit"}),"submitit")),Object(r.b)("p",null,"Both launchers are Hydra plugins, and each takes some specific configuration for things like how many GPUs to use etc.\nSee ",Object(r.b)("a",a({parentName:"p"},{href:"https://github.com/facebookresearch/hydra/tree/master/demos/6_sweep/conf/.hydra"}),"this")," for an example Hydra\nconfiguration that can run on Slurm and submitit."),Object(r.b)("p",null,"Running parameter sweeps is easy, just add --sweep or -s to your your app execution.\nThe following command would run a single job on Slurm, with all your default options:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-text"}),"$ python demos/6_sweep/experiment.py  -s\n[2019-08-01 16:24:36,851][INFO] - Sweep output dir : /checkpoint/omry/outputs/2019-08-01_16-24-36\n[2019-08-01 16:24:36,899][INFO] - Launching 1 jobs to slurm queue\n[2019-08-01 16:24:36,899][INFO] -       #0 :\n")),Object(r.b)("p",null,"Let's take a peak at the output:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-text"}),"$ tree -a  /checkpoint/omry/outputs/2019-08-01_16-24-36\n/checkpoint/omry/outputs/2019-08-01_16-24-36\n├── 0_16248207\n│   ├── config.yaml\n│   ├── experiment.log\n│   └── overrides.yaml\n└── .slurm\n    ├── slurm-16248207.err\n    └── slurm-16248207.out\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"config.yaml")," holds the composed config for this job."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"experiment.log")," is the log output"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"overrides.yaml")," contains the command line overrides used to launch this job.")),Object(r.b)("p",null,"In addition, there is a hidden ",Object(r.b)("inlineCode",{parentName:"p"},".slurm")," sub directory that keeps stdout and stderr for each slurm job."),Object(r.b)("p",null,"You can also sweep an arbitrary number of dimensions:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-text"}),'$ python experiment.py  -s optimizer=adam,nesterov random_seed=0,1,3\n[2019-07-27 22:41:01,474][INFO] - Sweep output dir : /checkpoint/omry/outputs/2019-07-27_22-41-01\n[2019-07-27 22:41:01,526][INFO] - Launching 6 jobs to slurm queue\n[2019-07-27 22:41:01,526][INFO] -       #0 : optimizer=adam random_seed=0\n[2019-07-27 22:41:01,526][INFO] -       #1 : optimizer=adam random_seed=1\n[2019-07-27 22:41:01,527][INFO] -       #2 : optimizer=adam random_seed=3\n[2019-07-27 22:41:01,527][INFO] -       #3 : optimizer=nesterov random_seed=0\n[2019-07-27 22:41:01,527][INFO] -       #4 : optimizer=nesterov random_seed=1\n[2019-07-27 22:41:01,527][INFO] -       #5 : optimizer=nesterov random_seed=3\nDask dashboard for "slurm" at http://localhost:8005.\n')),Object(r.b)("p",null,"In the example above we a total of 6 jobs, 3 for adam and 3 for nesterov with different random seeds."),Object(r.b)("p",null,"You can switch between fairtask and submitit by overriding launcher to fairtask or submitit, or changing the\ndefault in the .hydra/hydra.yaml config file."),Object(r.b)("p",null,"For example:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-text"}),"$ python experiment.py  -s launcher=submitit\n[2019-07-27 22:42:48,060][INFO] - Sweep output dir : /checkpoint/omry/outputs/2019-07-27_22-42-48\n[2019-07-27 22:42:48,062][INFO] -       #0 :\n")),Object(r.b)("p",null,"Sweep support is currently very basic and this area will improve further."),Object(r.b)("p",null,"Check the ",Object(r.b)("a",a({parentName:"p"},{href:"https://github.com/facebookresearch/hydra/tree/master/demos/6_sweep"}),"runnable example"),"."))}c.isMDXComponent=!0},70:function(e,t,n){"use strict";n.d(t,"a",function(){return p}),n.d(t,"b",function(){return l});var r=n(0),a=n.n(r),o=a.a.createContext({}),i=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},p=function(e){var t=i(e.components);return a.a.createElement(o.Provider,{value:t},e.children)};var u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},c=function(e){var t=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,p=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),u=i(t),c=n,l=u[o+"."+c]||u[c]||s[c]||r;return t?a.a.createElement(l,Object.assign({},p,{components:t})):a.a.createElement(l,p)};function l(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:r,i[1]=p;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);