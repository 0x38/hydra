(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{161:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return p}));var o=t(1),r=t(9),i=(t(0),t(233)),a={id:"config_groups",title:"Config groups"},c={id:"tutorials/structured_config/config_groups",title:"Config groups",description:"This example adds `mysql` and `postgresql` configs into the config group `db`.",source:"@site/docs/tutorials/structured_config/3_config_groups.md",permalink:"/docs/next/tutorials/structured_config/config_groups",editUrl:"https://github.com/facebookresearch/hydra/edit/master/website/docs/tutorials/structured_config/3_config_groups.md",version:"next",lastUpdatedBy:"Omry Yadan",lastUpdatedAt:1589597074,sidebar:"Docs",previous:{title:"Nesting configs",permalink:"/docs/next/tutorials/structured_config/nesting"},next:{title:"Defaults",permalink:"/docs/next/tutorials/structured_config/defaults"}},s=[],l={rightToc:s};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This example adds ",Object(i.b)("inlineCode",{parentName:"p"},"mysql")," and ",Object(i.b)("inlineCode",{parentName:"p"},"postgresql")," configs into the config group ",Object(i.b)("inlineCode",{parentName:"p"},"db"),".\nThe config group ",Object(i.b)("inlineCode",{parentName:"p"},"db")," corresponds to the directory name inside the config directory in config-file based examples."),Object(i.b)("p",null,"Noteworthy things in the example:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The two config classes ",Object(i.b)("inlineCode",{parentName:"li"},"MySQLConfig")," and ",Object(i.b)("inlineCode",{parentName:"li"},"PostGreSQLConfig")," have no common superclass"),Object(i.b)("li",{parentName:"ul"},"The type of the ",Object(i.b)("inlineCode",{parentName:"li"},"db")," field in ",Object(i.b)("inlineCode",{parentName:"li"},"Config")," is ",Object(i.b)("inlineCode",{parentName:"li"},"Any"),", This means it offers ",Object(i.b)("em",{parentName:"li"},"no")," type safety (static or runtime)")),Object(i.b)("p",null,"A good solution here might have been to use a ",Object(i.b)("inlineCode",{parentName:"p"},"Union[MySQLConfig, PostGreSQLConfig]"),", but Unions are not currently\nsupported by Structured Configs, so we use ",Object(i.b)("inlineCode",{parentName:"p"},"Any")," as a last resort."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-python"}),'@dataclass\nclass MySQLConfig:\n    driver: str = "mysql"\n    host: str = "localhost"\n    port: int = 3306\n\n@dataclass\nclass PostGreSQLConfig:\n    driver: str = "postgresql"\n    host: str = "localhost"\n    port: int = 5432\n    timeout: int = 10\n\n# Config is extending DictConfig to allow type safe access to the pretty() function below\n@dataclass\nclass Config(DictConfig):\n    db: Any = MISSING\n\ncs = ConfigStore.instance()\ncs.store(name="config", node=Config)\ncs.store(group="db", name="mysql", node=MySQLConfig)\ncs.store(group="db", name="postgresql", node=PostGreSQLConfig)\n\n@hydra.main(config_name="config")\ndef my_app(cfg: Config) -> None:\n    print(cfg.pretty())\n')),Object(i.b)("p",null,"You can select the database from the command line:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),"$ python my_app.py db=postgresql\ndb:\n  driver: postgresql\n  host: localhost\n  password: drowssap\n  port: 5432\n  timeout: 10\n  user: postgre_user\n")),Object(i.b)("h4",{id:"config-inheritance"},"Config inheritance"),Object(i.b)("p",null,"We can improve on the above example by modeling the configuration with inheritance.\nNoteworthy things in the example:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"We can move fields to the top level class, reducing repetition of field names, type and default values"),Object(i.b)("li",{parentName:"ul"},"The type of the ",Object(i.b)("inlineCode",{parentName:"li"},"db")," field in ",Object(i.b)("inlineCode",{parentName:"li"},"Config")," is ",Object(i.b)("inlineCode",{parentName:"li"},"DBConfig"),", this offers static and runtime type safety "),Object(i.b)("li",{parentName:"ul"},"We can use OmegaConf.get_type() to obtain the underlying type, and cast() to coerce the type checker to accept it")),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-python"}),'@dataclass\nclass DBConfig:\n    host: str = "localhost"\n    port: int = MISSING\n    driver: str = MISSING\n\n@dataclass\nclass MySQLConfig(DBConfig):\n    driver = "mysql"\n    port = 3306\n\n@dataclass\nclass PostGreSQLConfig(DBConfig):\n    driver = "postgresql"\n    port = 5432\n    timeout: int = 10\n\n@dataclass\nclass Config(DictConfig):\n    db: DBConfig = MISSING\n\ncs = ConfigStore.instance()\ncs.store(name="config", node=Config)\ncs.store(group="db", name="mysql", node=MySQLConfig)\ncs.store(group="db", name="postgresql", node=PostGreSQLConfig)\n\ndef connect_mysql(cfg: MySQLConfig) -> None:\n    print(f"Connecting to MySQL: {cfg.host}:{cfg.port}")\n\ndef connect_postgresql(cfg: PostGreSQLConfig) -> None:\n    print(f"Connecting to PostGreSQL: {cfg.host}:{cfg.port} (timeout={cfg.timeout})")\n\n@hydra.main(config_name="config")\ndef my_app(cfg: Config) -> None:\n    # Remember that the actual type of Config and db inside it is DictConfig.\n    # If you need to get the underlying type of a config object use OmegaConf.get_type:\n    if OmegaConf.get_type(cfg.db) is MySQLConfig:\n        connect_mysql(cast(MySQLConfig, cfg.db))\n    elif OmegaConf.get_type(cfg.db) is PostGreSQLConfig:\n        connect_postgresql(cast(PostGreSQLConfig, cfg.db))\n    else:\n        raise ValueError()\n')),Object(i.b)("p",null,"Example output:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{}),"$ python my_app_with_inheritance.py db=postgresql\nConnecting to PostGreSQL: localhost:5432 (timeout=10)\n")))}p.isMDXComponent=!0},233:function(e,n,t){"use strict";t.d(n,"a",(function(){return f})),t.d(n,"b",(function(){return d}));var o=t(0),r=t.n(o);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),p=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},f=function(e){var n=p(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=Object(o.forwardRef)((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=p(t),u=o,d=f["".concat(a,".").concat(u)]||f[u]||g[u]||i;return t?r.a.createElement(d,c({ref:n},l,{components:t})):r.a.createElement(d,c({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);