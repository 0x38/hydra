(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{62:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return u}));r(0);var n=r(86);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i={id:"working_directory",title:"Output/Working directory",sidebar_label:"Output/Working directory"},c=[],p={rightToc:c},l="wrapper";function u(e){var t=e.components,r=a(e,["components"]);return Object(n.b)(l,o({},p,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"Hydra solves the problem of your needing to specify a new output directory for each run, by\ncreating a directory for each run and executing your code within that directory."),Object(n.b)("p",null,"The working directory is used to:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Store the output for the application (For example, a database dump file)"),Object(n.b)("li",{parentName:"ul"},"Store the Hydra output for the run (Configuration, Logs etc)")),Object(n.b)("p",null,"Every time you run the app, a new working directory is automatically created:"),Object(n.b)("p",null,"Python file: ",Object(n.b)("inlineCode",{parentName:"p"},"my_app.py")),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-python"}),'import os\n\n@hydra.main()\ndef my_app(_cfg):\n    print("Working directory : {}".format(os.getcwd()))\n\n$ python my_app.py\nWorking directory : /home/omry/dev/hydra/outputs/2019-09-25/15-16-17\n\n$ python my_app.py\nWorking directory : /home/omry/dev/hydra/outputs/2019-09-25/15-16-19\n\n')),Object(n.b)("p",null,"Let's take a look at one of those working directories:"),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-text"}),"$ tree outputs/2019-09-25/15-16-17\noutputs/2019-09-25/15-16-17\n├── config.yaml\n├── hydra.yaml\n├── my_app.log\n└── overrides.yaml\n")),Object(n.b)("p",null,"We have 4 files there:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"config.yaml"),": A dump of the user specified configuration"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"hydra.yaml"),": A dump of the Hydra configuration"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"overrides.yaml"),": The command line overrides used"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"my_app.log"),": A log file created for this run")),Object(n.b)("p",null,"Working directory can be ",Object(n.b)("a",o({parentName:"p"},{href:"../configure_hydra/workdir/"}),"customized"),"."))}u.isMDXComponent=!0},86:function(e,t,r){"use strict";r.d(t,"a",(function(){return c})),r.d(t,"b",(function(){return y}));var n=r(0),o=r.n(n),a=o.a.createContext({}),i=function(e){var t=o.a.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):Object.assign({},t,e)),r},c=function(e){var t=i(e.components);return o.a.createElement(a.Provider,{value:t},e.children)};var p="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,p=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(r[n]=e[n]);return r}(e,["components","mdxType","originalType","parentName"]),u=i(r),y=n,d=u[c+"."+y]||u[y]||l[y]||a;return r?o.a.createElement(d,Object.assign({},{ref:t},p,{components:r})):o.a.createElement(d,Object.assign({},{ref:t},p))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:n,i[1]=c;for(var y=2;y<a;y++)i[y]=r[y];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);