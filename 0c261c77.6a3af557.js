(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{141:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(1),r=n(9),i=(n(0),n(227)),o={id:"config_file",title:"Configuration file",sidebar_label:"Configuration file"},c={id:"tutorials/basic/config_file",title:"Configuration file",description:"It can get tedious to type all those command line arguments every time.",source:"@site/docs/tutorials/basic/2_config_file.md",permalink:"/docs/next/tutorials/basic/config_file",editUrl:"https://github.com/facebookresearch/hydra/edit/master/website/docs/tutorials/basic/2_config_file.md",version:"next",lastUpdatedBy:"Omry Yadan",lastUpdatedAt:1583102498,sidebar_label:"Configuration file",sidebar:"Docs",previous:{title:"Simple command line application",permalink:"/docs/next/tutorials/basic/simple_cli"},next:{title:"Config groups",permalink:"/docs/next/tutorials/basic/config_groups"}},l=[{value:"Strict mode",id:"strict-mode",children:[]}],p={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"It can get tedious to type all those command line arguments every time.\nFix it by creating a configuration file in YAML format."),Object(i.b)("p",null,"Configuration file: ",Object(i.b)("inlineCode",{parentName:"p"},"config.yaml")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"db:\n  driver: mysql\n  user: omry\n  pass: secret\n")),Object(i.b)("p",null,"Specify the config file by passing a ",Object(i.b)("inlineCode",{parentName:"p"},"config_path")," parameter to the ",Object(i.b)("inlineCode",{parentName:"p"},"@hydra.main()")," decorator.\nThe location of the ",Object(i.b)("inlineCode",{parentName:"p"},"config_path")," is relative to your Python file."),Object(i.b)("p",null,"Python file: ",Object(i.b)("inlineCode",{parentName:"p"},"my_app.py")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"@hydra.main(config_path='config.yaml')\ndef my_app(cfg):\n    print(cfg.pretty())\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"config.yaml")," is loaded automatically when you run your application"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"$ python my_app.py\ndb:\n  driver: mysql\n  pass: secret\n  user: omry\n")),Object(i.b)("p",null,"You can override values in the loaded config from the command line:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"$ python my_app.py db.user=root db.pass=1234\ndb:\n  driver: mysql\n  user: root\n  pass: 1234\n")),Object(i.b)("h3",{id:"strict-mode"},"Strict mode"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"Strict mode")," is useful for catching mistakes earlier by preventing access to missing config fields.\nIt is enabled by default once you specify a configuration file, and can help with two classes of mistakes:"),Object(i.b)("h4",{id:"accessing-missing-fields-in-the-code"},"Accessing missing fields in the code"),Object(i.b)("p",null,"In the example below, there is a typo in ",Object(i.b)("inlineCode",{parentName:"p"},"db.driver")," in the code.\nThis will result in an exception."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"@hydra.main(config_path='config.yaml')\ndef my_app(cfg : DictConfig) -> None:\n    print(cfg.db.drover)  # typo: cfg.db.driver. Raises exception\n")),Object(i.b)("p",null,"With ",Object(i.b)("inlineCode",{parentName:"p"},"Strict mode")," disabled, ",Object(i.b)("inlineCode",{parentName:"p"},"None")," will be printed."),Object(i.b)("h4",{id:"command-line-override-errors"},"Command line override errors"),Object(i.b)("p",null,"In the example below, there is a typo in ",Object(i.b)("inlineCode",{parentName:"p"},"db.driver")," in the command line.",Object(i.b)("br",{parentName:"p"}),"\n","This will result in an exception."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"$ python my_app.py db.drover=mariadb\nTraceback (most recent call last):\n...\nAttributeError: Accessing unknown key in a struct : db.drover\n")),Object(i.b)("p",null,"With ",Object(i.b)("inlineCode",{parentName:"p"},"Strict mode")," disabled, the ",Object(i.b)("inlineCode",{parentName:"p"},"drover")," field will be added to the ",Object(i.b)("inlineCode",{parentName:"p"},"db")," config node."),Object(i.b)("h4",{id:"disabling-strict-mode"},"Disabling strict mode"),Object(i.b)("p",null,"It is not recommended to disable strict mode. You can do it by passing ",Object(i.b)("inlineCode",{parentName:"p"},"strict=False")," to ",Object(i.b)("inlineCode",{parentName:"p"},"hydra.main()")," "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"@hydra.main(config_path='config.yaml', strict=False)\ndef my_app(cfg : DictConfig) -> None:\n    cfg.db.port = 3306 # Okay\n")),Object(i.b)("p",null,"You can also disable it selectively within specific context. See ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://omegaconf.readthedocs.io/en/latest/usage.html#struct-flag"}),"open_dict")," in the OmegaConf documentation.\nNote that strict mode is referred to as ",Object(i.b)("inlineCode",{parentName:"p"},"struct mode")," in OmegaConf."))}b.isMDXComponent=!0},227:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),b=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},s=function(e){var t=b(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=b(n),m=a,u=s["".concat(o,".").concat(m)]||s[m]||d[m]||i;return n?r.a.createElement(u,c({ref:t},p,{components:n})):r.a.createElement(u,c({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);