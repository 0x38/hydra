(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{76:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return u}));t(0);var a=t(84);function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function r(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i={id:"composition",title:"Config composition",sidebar_label:"Config composition"},s=[],l={rightToc:s},c="wrapper";function u(e){var n=e.components,t=r(e,["components"]);return Object(a.b)(c,o({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The product manager had an idea:\nShe wants my_app to support creating arbitrary database schemas, on all supported databases!\nShe also wants to have two kinds of UI - a full UI to create and view databases and a view only UI.\nYou are the fall guy. Before you even start, she tells you there are already 3 database schema you need to support, and more are coming soon.\nYou area already sweating because it all sounds pretty complex.\nYou also got a feeling that this is only the beginning - who knows what idea she will have next?"),Object(a.b)("p",null,"To solve it with Hydra, we need more config groups.\nAdd a ",Object(a.b)("inlineCode",{parentName:"p"},"schema")," and a ",Object(a.b)("inlineCode",{parentName:"p"},"ui")," config group:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-text"}),"├── conf\n│   ├── config.yaml\n│   ├── db\n│   │   ├── mysql.yaml\n│   │   └── postgresql.yaml\n│   ├── schema\n│   │   ├── school.yaml\n│   │   ├── support.yaml\n│   │   └── warehouse.yaml\n│   └── ui\n│       ├── full.yaml\n│       └── view.yaml\n└── my_app.py\n")),Object(a.b)("p",null,"At this point, we already have 2 supported databases, 3 schemas, and 2 ui modes.\nThis is a total of 12 combinations. adding another supported database will bring this to 18 combinations.\nCreating 18 files is not a good idea, if you wanted to make a change such as renaming ",Object(a.b)("inlineCode",{parentName:"p"},"db.user")," to ",Object(a.b)("inlineCode",{parentName:"p"},"db.username")," you would have to do it 18 times!"),Object(a.b)("p",null,"Composition can come to the rescue."),Object(a.b)("p",null,"Configuration file: ",Object(a.b)("inlineCode",{parentName:"p"},"config.yaml")),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-yaml"}),"defaults:\n  - db: mysql\n  - ui: full\n  - schema: ???\n")),Object(a.b)("p",null,"The defaults is ordered. if there are two configurations that defines the same value, the second one would win. If two configurations are contributing to the same dictionary the result would be a combined dictionary.\nWe also see something new here: ",Object(a.b)("inlineCode",{parentName:"p"},"schema: ???"),". ",Object(a.b)("inlineCode",{parentName:"p"},"???")," is a special string which indicates that this key is mandatory and is missing right now.\nYou decided that mysql is the default database, but there is no good choice for a default schema here. This will require that the schema is\nspecified in the command line. If it's not, an exception will be thrown when it's accessed. "),Object(a.b)("p",null,"When running this, we will compose a configuration with mysql, full ui and the ",Object(a.b)("inlineCode",{parentName:"p"},"school")," database schema (which we are seeing for the first time here):"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-yaml"}),"$ python my_app.py schema=school\ndb:\n  driver: mysql\n  pass: secret\n  user: omry\nschema:\n  database: school\n  tables:\n  - fields:\n    - name: string\n    - class: int\n    name: students\n  - fields:\n    - profession: string\n    - time: data\n    - class: int\n    name: exams\nui:\n  windows:\n    create_db: true\n    view: true\n")),Object(a.b)("p",null,"In much the same way you can compose any of the other 11 configurations and by adding additional command line overrides you can\ncreate completely new configurations."))}u.isMDXComponent=!0},84:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return p}));var a=t(0),o=t.n(a),r=o.a.createContext({}),i=function(e){var n=o.a.useContext(r),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},s=function(e){var n=i(e.components);return o.a.createElement(r.Provider,{value:n},e.children)};var l="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},u=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,l=function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===n.indexOf(a)&&(t[a]=e[a]);return t}(e,["components","mdxType","originalType","parentName"]),u=i(t),p=a,d=u[s+"."+p]||u[p]||c[p]||r;return t?o.a.createElement(d,Object.assign({},{ref:n},l,{components:t})):o.a.createElement(d,Object.assign({},{ref:n},l))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[l]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<r;p++)i[p]=t[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);