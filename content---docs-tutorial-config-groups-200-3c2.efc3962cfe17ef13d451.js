(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{86:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"rightToc",(function(){return p})),t.d(n,"default",(function(){return u}));t(0);var r=t(98);function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i={id:"config_groups",title:"Config groups",sidebar_label:"Config groups"},p=[],c={rightToc:p},l="wrapper";function u(e){var n=e.components,t=a(e,["components"]);return Object(r.b)(l,o({},c,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This is the most important concept in Hydra."),Object(r.b)("p",null,"Suppose you want to benchmark PostgreSQL and MySQL for your application.\nWhen running of the application, you will need either MySQL or PostgreSQL - but not both."),Object(r.b)("p",null,"The way to do this with Hydra is with a ",Object(r.b)("strong",{parentName:"p"},"Config group"),".\nA config group is a mutually exclusive set of configuration files."),Object(r.b)("p",null,"To create a config group, create a directory - ",Object(r.b)("inlineCode",{parentName:"p"},"db")," - that will hold\na file for each database configuration alternative.\nSince we are expecting to have multiple config groups, we will proactively move all the configuration\nfiles into a ",Object(r.b)("inlineCode",{parentName:"p"},"conf")," directory."),Object(r.b)("p",null,"Python file: ",Object(r.b)("inlineCode",{parentName:"p"},"my_app.py")),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-python"}),'@hydra.main(config_path="conf")\ndef my_app(cfg):\n    print(cfg.pretty())\n')),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"config_path")," can specify your config file as in the ",Object(r.b)("a",o({parentName:"p"},{href:"simple_cli/"}),"previous command line example"),", or the root directory for your configuration files.\nIf a config file is specified, it's directory is the root directory."),Object(r.b)("p",null,"The directory structure of our application now looks like:"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-text"}),"├── conf\n│   └── db\n│       ├── mysql.yaml\n│       └── postgresql.yaml\n└── my_app.py\n")),Object(r.b)("p",null,"If you run it, it prints an empty config because no configuration was specified."),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-yaml"}),"$ python my_app.py\n{}\n")),Object(r.b)("p",null,"You can now choose which database configuration to use from the command line:"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-yaml"}),"$ python my_app.py db=postgresql\ndb:\n  driver: postgresql\n  pass: drowssap\n  timeout: 10\n  user: postgre_user\n")),Object(r.b)("p",null,"Like before, you can still override individual values in the resulting config:"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-yaml"}),"$ python my_app.py db=postgresql db.timeout=20\ndb:\n  driver: postgresql\n  pass: drowssap\n  timeout: 20\n  user: postgre_user\n")),Object(r.b)("p",null,"This simple example demonstrated a very powerful feature of Hydra:\nYou can compose your configuration object from multiple configuration files."))}u.isMDXComponent=!0},98:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return s}));var r=t(0),o=t.n(r),a=o.a.createContext({}),i=function(e){var n=o.a.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},p=function(e){var n=i(e.components);return o.a.createElement(a.Provider,{value:n},e.children)};var c="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},u=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===n.indexOf(r)&&(t[r]=e[r]);return t}(e,["components","mdxType","originalType","parentName"]),u=i(t),s=r,f=u[p+"."+s]||u[s]||l[s]||a;return t?o.a.createElement(f,Object.assign({},{ref:n},c,{components:t})):o.a.createElement(f,Object.assign({},{ref:n},c))}));function s(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[c]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<a;s++)i[s]=t[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);