(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{251:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),s=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=s(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),p=s(a),m=n,u=p["".concat(i,".").concat(m)]||p[m]||d[m]||l;return a?r.a.createElement(u,c(c({ref:t},b),{},{components:a})):r.a.createElement(u,c({ref:t},b))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=m;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var b=2;b<l;b++)i[b]=a[b];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},63:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return s}));var n=a(2),r=a(7),l=(a(0),a(251)),i={id:"defaults_list",title:"The Defaults List"},c={unversionedId:"advanced/defaults_list",id:"advanced/defaults_list",isDocsHomePage:!1,title:"The Defaults List",description:"Introduction",source:"@site/docs/advanced/defaults_list.md",slug:"/advanced/defaults_list",permalink:"/docs/next/advanced/defaults_list",editUrl:"https://github.com/facebookresearch/hydra/edit/master/website/docs/advanced/defaults_list.md",version:"current",lastUpdatedBy:"Omry Yadan",lastUpdatedAt:1609541875,sidebar:"docs",previous:{title:"extended",permalink:"/docs/next/advanced/override_grammar/extended"},next:{title:"Packages",permalink:"/docs/next/advanced/overriding_packages"}},o=[{value:"Introduction",id:"introduction",children:[]},{value:"An example",id:"an-example",children:[]},{value:"Overriding Config Group options",id:"overriding-config-group-options",children:[]},{value:"Composition order",id:"composition-order",children:[]},{value:"Interpolation in the Defaults List",id:"interpolation-in-the-defaults-list",children:[]},{value:"Debugging the Defaults List",id:"debugging-the-defaults-list",children:[]},{value:"Related topics",id:"related-topics",children:[]}],b={rightToc:o};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"introduction"},"Introduction"),Object(l.b)("div",{className:"admonition admonition-important alert alert--info"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"Many of the features described in this page are new. Please report any issues."))),Object(l.b)("p",null,"The Defaults List is a list in an input config that instructs Hydra how to build the output config.\nEach input config can have a Defaults List as a top level element. The Defaults List itself\nis not a part of output config."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text",metastring:'title="Defaults List YAML syntax"',title:'"Defaults',List:!0,YAML:!0,'syntax"':!0}),"defaults:\n (- CONFIG|GROUP_DEFAULT)*\n\nCONFIG                 : (CONFIG_GROUP/)?CONFIG_NAME(@PACKAGE)?\nGROUP_DEFAULT          : [optional|override]? CONFIG_GROUP(@PACKAGE)?: OPTION\nOPTION                 : CONFIG_NAME|null\n")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"CONFIG")," : A config to use when creating the output config. e.g. ",Object(l.b)("inlineCode",{parentName:"p"},"db/mysql"),", ",Object(l.b)("inlineCode",{parentName:"p"},"db/mysql@backup"),"."),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"GROUP_DEFAULT")," : An ",Object(l.b)("em",{parentName:"p"},"overridable")," config. e.g. ",Object(l.b)("inlineCode",{parentName:"p"},"db: mysql"),", ",Object(l.b)("inlineCode",{parentName:"p"},"db@backup: mysql"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("em",{parentName:"strong"},"override"))," : Overrides the option of a previously defined GROUP_DEFAULT."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("em",{parentName:"strong"},"optional"))," : By default, an OPTION that do not exist causes an error; optional suppresses the error. "),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},Object(l.b)("em",{parentName:"strong"},"null"))," : A place-holder for a future override. If it is not overridden the entry is ignored.")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"CONFIG_NAME"),": The name of a config, without the file system extension. e.g. ",Object(l.b)("inlineCode",{parentName:"p"},"mysql")," and not ",Object(l.b)("inlineCode",{parentName:"p"},"mysql.yaml"),"."),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"CONFIG_GROUP")," : A path to a set of OPTIONS.",Object(l.b)("br",{parentName:"p"}),"\n","The path is relative to the containing config.\nIt can be made absolute by prefixing it with a ",Object(l.b)("inlineCode",{parentName:"p"},"/"),".",Object(l.b)("br",{parentName:"p"}),"\n","The path separator is ",Object(l.b)("inlineCode",{parentName:"p"},"/")," regardless of the operating system."),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"OPTION"),": The currently selected ",Object(l.b)("em",{parentName:"p"},"CONFIG_NAME")," from a ",Object(l.b)("em",{parentName:"p"},"CONFIG_GROUP"),"."),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"PACKAGE")," : Where to place the content of the config within the output config.\nIt is relative to the Package of the containing config by default. See ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/next/advanced/overriding_packages"}),"Packages"),"."),Object(l.b)("h2",{id:"an-example"},"An example"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text",metastring:'title="Config directory structure"',title:'"Config',directory:!0,'structure"':!0}),"\u251c\u2500\u2500 server\n\u2502   \u251c\u2500\u2500 db\n\u2502   \u2502   \u251c\u2500\u2500 mysql.yaml\n\u2502   \u2502   \u2514\u2500\u2500 sqlite.yaml\n\u2502   \u2514\u2500\u2500 apache.yaml\n\u2514\u2500\u2500 config.yaml\n")),Object(l.b)("p",null,"Input configs:"),Object(l.b)("div",{className:"row"},Object(l.b)("div",{className:"col col--4"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'}),"defaults:\n  - server/apache\n\ndebug: false\n\n\n\n"))),Object(l.b)("div",{className:"col col--4"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="server/apache.yaml"',title:'"server/apache.yaml"'}),"defaults:\n  - db: mysql\n\nname: apache\n\n\n\n"))),Object(l.b)("div",{className:"col col--4"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="server/db/mysql.yaml"',title:'"server/db/mysql.yaml"'}),"name: mysql\n")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="server/db/sqlite.yaml"',title:'"server/db/sqlite.yaml"'}),"name: sqlite\n")))),Object(l.b)("p",null,"Output config:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="$ python my_app.py"',title:'"$',python:!0,'my_app.py"':!0}),"server:\n  db:\n    name: mysql\n  name: apache\ndebug: false\n")),Object(l.b)("h2",{id:"overriding-config-group-options"},"Overriding Config Group options"),Object(l.b)("p",null,"A Config Group's option can be overridden using a new ",Object(l.b)("em",{parentName:"p"},"GROUP_DEFAULT")," with the ",Object(l.b)("strong",{parentName:"p"},Object(l.b)("em",{parentName:"strong"},"override"))," keyword.\nIf a Group Default is overridden more than once, the last one, in depth first order, wins."),Object(l.b)("p",null,"Extending the previous example:"),Object(l.b)("div",{className:"row"},Object(l.b)("div",{className:"col col--6"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="config.yaml" {3}',title:'"config.yaml"',"{3}":!0}),"defaults:\n  - server/apache\n  - override server/db: sqlite\n\ndebug: false\n"))),Object(l.b)("div",{className:"col col--6"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="$ python my_app.py" {2,3}',title:'"$',python:!0,'my_app.py"':!0,"{2,3}":!0}),"server:\n  db:\n    name: sqlite\n  name: apache\ndebug: false\n")))),Object(l.b)("p",null,"A Config Group's option can also be overridden via the command line. e.g:  "),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),"$ python my_app.py server/db=sqlite\n")),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"TODO:"),Object(l.b)("ul",{parentName:"div"},Object(l.b)("li",{parentName:"ul"},"link command line overrides to a relevant page if and when we have it"),Object(l.b)("li",{parentName:"ul"},"consider adding a simple example of overriding a config group with a package override")))),Object(l.b)("h2",{id:"composition-order"},"Composition order"),Object(l.b)("p",null,"The Defaults List is ordered:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"If multiple configs define the same value, the last one wins."),Object(l.b)("li",{parentName:"ul"},"If multiple configs contribute to the same dictionary, the result is the combined dictionary.")),Object(l.b)("p",null,"By default, the content of a config is overriding the content of configs in the defaults list."),Object(l.b)("div",{className:"row"},Object(l.b)("div",{className:"col col--6"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="config.yaml" {5}',title:'"config.yaml"',"{5}":!0}),"defaults:\n  - db: mysql  \n\ndb:\n  host: backup\n"))),Object(l.b)("div",{className:"col  col--6"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="Result: db.host from config" {3}',title:'"Result:',"db.host":!0,from:!0,'config"':!0,"{3}":!0}),"db:\n  driver: mysql    # db/mysql.yaml\n  host: backup     # config.yaml\n  port: 3306       # db/mysql.yaml\n\n")))),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"_self_")," entry determines the relative position of ",Object(l.b)("strong",{parentName:"p"},"this")," config in the Defaults List.\nIf it is not specified, it is added automatically as the last item."),Object(l.b)("div",{className:"row"},Object(l.b)("div",{className:"col col--6"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="config.yaml" {2,6}',title:'"config.yaml"',"{2,6}":!0}),"defaults:\n  - _self_\n  - db: mysql # Overrides this config \n\ndb:\n  host: backup\n"))),Object(l.b)("div",{className:"col  col--6"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="Result: All values from db/mysql" {3}',title:'"Result:',All:!0,values:!0,from:!0,'db/mysql"':!0,"{3}":!0}),"db:\n  driver: mysql    # db/mysql.yaml\n  host: localhost  # db/mysql.yaml\n  port: 3306       # db/mysql.yaml\n\n\n")))),Object(l.b)("p",null,"With ",Object(l.b)("inlineCode",{parentName:"p"},"_self_")," at the top of the Defaults List, the host field defined in ",Object(l.b)("em",{parentName:"p"},"config.yaml")," now precedes the host field defined\nin ",Object(l.b)("em",{parentName:"p"},"db/mysql.yaml"),", and as a result is overridden."),Object(l.b)("h2",{id:"interpolation-in-the-defaults-list"},"Interpolation in the Defaults List"),Object(l.b)("p",null,"Config Group Options can be selected using interpolation."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"defaults:\n  - server: apache\n  - db: mysql\n  - combination_specific_config: ${server}_${db}  # apache_mysql\n")),Object(l.b)("p",null,"Interpolation keys can be config groups with any @package overrides.",Object(l.b)("br",{parentName:"p"}),"\n","For example: ",Object(l.b)("inlineCode",{parentName:"p"},"${db/engine}"),", ",Object(l.b)("inlineCode",{parentName:"p"},"${db@backup}")),Object(l.b)("p",null,"The selected option for ",Object(l.b)("em",{parentName:"p"},"combination_specific_config")," depends on the final selected options for ",Object(l.b)("em",{parentName:"p"},"db")," and ",Object(l.b)("em",{parentName:"p"},"server"),".",Object(l.b)("br",{parentName:"p"}),"\n","e.g. If ",Object(l.b)("em",{parentName:"p"},"db")," is overridden to ",Object(l.b)("em",{parentName:"p"},"sqlite"),", ",Object(l.b)("em",{parentName:"p"},"combination_specific_config")," will become ",Object(l.b)("em",{parentName:"p"},"apache_sqlite"),"."),Object(l.b)("h4",{id:"restrictions"},"Restrictions:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Defaults List interpolation is only supported in the primary config."),Object(l.b)("li",{parentName:"ul"},"The subtree expanded by an Interpolated Config may not contain overrides."),Object(l.b)("li",{parentName:"ul"},"Interpolation Keys in the Defaults List cannot reference values in the Final Config Object (it does not yet).")),Object(l.b)("p",null,"See ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/next/patterns/specializing_config"}),"Patterns/Specializing Configs")," for more information."),Object(l.b)("h2",{id:"debugging-the-defaults-list"},"Debugging the Defaults List"),Object(l.b)("p",null,"Hydra's config composition process is as follows:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"The Defaults Tree is created."),Object(l.b)("li",{parentName:"ul"},"The Final Defaults List is created via a DFS walk of the Defaults Tree."),Object(l.b)("li",{parentName:"ul"},"The Output Config is composed from the entries in the Final Defaults List.")),Object(l.b)("p",null,"You can inspect these artifacts via command line flags:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--info defaults-tree")," shows the Defaults Tree."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--info defaults")," Shows the Final Defaults List."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--cfg job|hydra|all")," Shows the Output Config.")),Object(l.b)("p",null,"Example outputs:"),Object(l.b)("details",null,Object(l.b)("summary",null,"python my_app.py ",Object(l.b)("b",null,"--info defaults-tree")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title=""',title:'""'}),"<root>:\n  hydra/config:\n    hydra/hydra_logging: default\n    hydra/job_logging: default\n    hydra/launcher: basic\n    hydra/sweeper: basic\n    hydra/output: default\n    hydra/help: default\n    hydra/hydra_help: default\n    _self_\n  config:\n    server/apache:\n      server/db: mysql\n      _self_\n    _self_\n"))),Object(l.b)("details",null,Object(l.b)("summary",null,"python my_app.py ",Object(l.b)("b",null,"--info defaults")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"Defaults List\n*************\n| Config path                 | Package             | _self_ | Parent        | \n-------------------------------------------------------------------------------\n| hydra/hydra_logging/default | hydra.hydra_logging | False  | hydra/config  |\n| hydra/job_logging/default   | hydra.job_logging   | False  | hydra/config  |\n| hydra/launcher/basic        | hydra.launcher      | False  | hydra/config  |\n| hydra/sweeper/basic         | hydra.sweeper       | False  | hydra/config  |\n| hydra/output/default        | hydra               | False  | hydra/config  |\n| hydra/help/default          | hydra.help          | False  | hydra/config  |\n| hydra/hydra_help/default    | hydra.hydra_help    | False  | hydra/config  |\n| hydra/config                | hydra               | True   | <root>        |\n| server/db/mysql             | server.db           | False  | server/apache |\n| server/apache               | server              | True   | config        |\n| config                      |                     | True   | <root>        |\n-------------------------------------------------------------------------------\n"))),Object(l.b)("details",null,Object(l.b)("summary",null,"python my_app.py ",Object(l.b)("b",null,"--cfg job")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"server:\n  db:\n    name: mysql\n  name: apache\ndebug: false\n"))),Object(l.b)("h2",{id:"related-topics"},"Related topics"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/advanced/overriding_packages"}),"Packages")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/patterns/extending_configs"}),"Common Patterns/Extending Configs")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/patterns/configuring_experiments"}),"Common Patterns/Configuring Experiments"))))}s.isMDXComponent=!0}}]);