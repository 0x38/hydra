(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{68:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return p}));t(0);var r=t(98);function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l={id:"objects",title:"Creating objects",sidebar_label:"Creating objects"},s=[],c={rightToc:s},i="wrapper";function p(e){var n=e.components,t=o(e,["components"]);return Object(r.b)(i,a({},c,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"A common pattern is to instantiate different types of objects based on the configuration, potentially passing different arguments to object.\nFor example, we may have a hierarchy of models, where two different classes implement the same model interface,\nbut taking different arguments in the initialization."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-python"}),'class Model:\n    def __init__(self):\n        pass\n\n    def forward(self, x):\n        pass\n\n\nclass Alexnet(Model):\n    def __init__(self, num_layers):\n        print("Alexnet: num_layers={}".format(num_layers))\n        self.num_layers = num_layers\n\n    def forward(self, x):\n        print("Alexnet: forward({})".format(x))\n\n\nclass Resnet(Model):\n    def __init__(self, num_layers, width):\n        print("Resnet: num_layers={}, width={}".format(num_layers, width))\n        self.num_layers = num_layers\n        self.width = width\n\n    def forward(self, x):\n        print("Resnet: forward({})".format(x))\n')),Object(r.b)("p",null,"To support this, we can have a parallel config structure:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-text"}),"demos/5_objects/conf/\n├── config.yaml\n└── model\n    ├── alexnet.yaml\n    └── resnet.yaml\n")),Object(r.b)("p",null,"model/alexnet.yaml:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-yaml"}),"model:\n  class: demos.5_objects.objects.Alexnet\n  params:\n    num_layers: 7\n")),Object(r.b)("p",null,"model/resnet.yaml:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-yaml"}),"model:\n  class: demos.5_objects.objects.Resnet\n  params:\n    num_layers: 50\n    width: 10\n")),Object(r.b)("p",null,"Finally, out code instantiate the object from the configuraiton in just 1 line of code:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-python"}),"@hydra.main(config_path='conf/config.yaml')\ndef experiment(cfg):\n    model = hydra.utils.instantiate(cfg.model)\n    model.forward(10)\n")),Object(r.b)("p",null,"As before, you can override parameters in the config:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-text"}),"$ python experiment.py model.params.num_layers=8\nAlexnet: num_layers=8\nAlexnet: forward(10)\n")),Object(r.b)("p",null,"Or combine composition and overriding:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-text"}),"$ python experiment.py model=resnet model.params.num_layers=100\nResnet: num_layers=100, width=10\nResnet: forward(10)\n")),Object(r.b)("p",null,"Check the ",Object(r.b)("a",a({parentName:"p"},{href:"https://github.com/facebookresearch/hydra/tree/master/demos/7_objects"}),"runnable example"),"."))}p.isMDXComponent=!0},98:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r),o=a.a.createContext({}),l=function(e){var n=a.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},s=function(e){var n=l(e.components);return a.a.createElement(o.Provider,{value:n},e.children)};var c="mdxType",i={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},p=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===n.indexOf(r)&&(t[r]=e[r]);return t}(e,["components","mdxType","originalType","parentName"]),p=l(t),m=r,u=p[s+"."+m]||p[m]||i[m]||o;return t?a.a.createElement(u,Object.assign({},{ref:n},c,{components:t})):a.a.createElement(u,Object.assign({},{ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=p;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[c]="string"==typeof e?e:r,l[1]=s;for(var m=2;m<o;m++)l[m]=t[m];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);